source('C:/Users/deybvagm/Google Drive/UNAL/Tercer semestre/Trabajo final maestria/hello.R', encoding = 'UTF-8')
rsp = amnfis(X_pima, d_pima, 4)
library("fields")
rsp = amnfis(X_pima, d_pima, 4)
rsp = amnfis(X_hepatitis, d_hepatitis, 4)
rsp = amnfis(X_ionosphere, d_ionosphere, 4)
rsp = amnfis(X_liver, d_liver, 4)
rsp = amnfis(X_cancer, d_cancer, 4)
rsp = amnfis(X_iris, d_iris, 4)
rsp = amnfis(X_wine, d_wine, 4)
rsp = amnfis(X_glass, d_glass, 4)
rsp = amnfis(X_lenses, d_lenses, 4)
source('C:/Users/deybvagm/Google Drive/UNAL/Tercer semestre/Trabajo final maestria/hello.R', encoding = 'UTF-8')
library('fields')
rsp = amnfis(X_ionosphere, d_ionosphere, 4)
a = matrix(rnorm(10), nrow = 5)
a
sapply(a, sum)
apply(a, sum)
apply(a,1,sum)
lapply(a, sum)
apply(a,1,sum)
apply(a,1,cumsum)
rsp = amnfis(X_ionosphere, d_ionosphere, 4)
a
apply(a,1,sum)
with(x, sum(x))
with(x, sum)
with(a, sum)
with(a, sum(x))
b <- with(a, sum(b))
source('C:/Users/deybvagm/Google Drive/UNAL/Tercer semestre/Trabajo final maestria/hello.R', encoding = 'UTF-8')
source('C:/Users/deybvagm/Google Drive/UNAL/Tercer semestre/Trabajo final maestria/hello.R', encoding = 'UTF-8')
getwd()
source('~/amnfis/R/hello.R')
load('environment_variables/env.RData')
length(ionosphere_part[[1]])
dim(ionosphere_part[[1]])
dim(ionosphere_part[[2]])
X_ionosphere_B <- as.matrix(ionosphere_part[[2]][1:34])
dim(X_ionosphere_B)
X_ionosphere_B <- as.matrix(ionosphere_part[[2]][,1:34])
dim(X_ionosphere_B)
d_ionosphere_B <- as.vector(ionosphere_part[[2]]$V35)
d_ionosphere_B <- as.vector(ionosphere_part[[2]][,35])
length(d_ionosphere_B)
is.vector(d_ionosphere_B)
model_ionosphere_B <- amnfis(X_ionosphere_B, d_ionosphere_B, 7)
y_ionosphere_complete_B <- amnfis.simulate(model_ionosphere_B, as.matrix(ionosphere_part[[1]][,1:34]))
as.vector(y_ionosphere_complete_B)
y_ionosphere_complete_B <- ifelse(as.vector(y_ionosphere_complete_B) > 0.5, 1, 0)
y_ionosphere_complete_B
y_ionosphere_complete_true_ B <- as.vector(ionosphere_part[[1]][,35])
y_ionosphere_complete_true_B <- as.vector(ionosphere_part[[1]][,35])
y_ionosphere_complete_true_B
length(y_ionosphere_complete_true_B)
length(y_ionosphere_complete_B)
y_ionosphere_complete_true_B[y_ionosphere_complete_B == y_ionosphere_complete_true_B]
length(y_ionosphere_complete_true_B[y_ionosphere_complete_B == y_ionosphere_complete_true_B])
160/200
X_ionosphere <- as.matrix(ionosphere_part[[1]][,1:34])
dim(X_ionosphere)
d_ionosphere <- as.vector(ionosphere_part[[1]][,35])
length(d_ionosphere)
model_ionosphere <- amnfis.simulate(X_ionosphere, d_ionosphere, 7)
model_ionosphere <- amnfis(X_ionosphere, d_ionosphere, 7)
y_ionosphere <- amnfis.simulate(model_ionosphere, X_ionosphere_B)
as.vector(y_ionosphere)
y_ionosphere = ifelse(as.vector(y_ionosphere) > 0.5, 1, 0)
y_ionosphere
length(d_ionosphere_B)
length(y_ionosphere)
y_ionosphere_complete_true
length(y_ionosphere_complete_true)
y_ionosphere_complete_true[y_ionosphere_complete_true == d_ionosphere_B]
length(y_ionosphere_complete_true[y_ionosphere_complete_true == d_ionosphere_B])
y_ionosphere_complete_true <- as.vector(ionosphere_part[[2]][,35])
y_ionosphere_complete_true
length(y_ionosphere_complete_true[y_ionosphere_complete_true == d_ionosphere_B])
length(y_ionosphere_complete_true[y_ionosphere_complete_true == y_ionosphere])
length(y_ionosphere)
y_ionosphere_B <- y_ionosphere_complete_B
y_ionosphere_true <- y_ionosphere_complete_true
y_ionosphere_true_B <- y_ionosphere_complete_true_B
remove(y_ionosphere_complete)
remove(y_ionosphere_complete_B, y_ionosphere_complete_true, y_ionosphere_complete_true_B)
remove(X_ionosphere_test)
dim(X_ionosphere)
dim(X_ionosphere_B)
y_ionosphere_AA <- amnfis.simulate(model_ionosphere, X_ionosphere)
y_ionosphere_AA <- ifelse(as.vector(y_ionosphere_AA) > 0.5, 1, 0)
y_ionosphere_AA
length(y_ionosphere_AA)
length(y_ionosphere_B)
y_ionosphere_A <- y_ionosphere_B
remove(y_ionosphere_B)
length(y_ionosphere)
y_ionosphere_B <- y_ionosphere
remove(y_ionosphere)
length(y_ionosphere_B)
length(y_ionosphere_AA)
dim(X_ionosphere_B)
y_ionosphere_BB <- amnfis.simulate(model_ionosphere_B, X_ionosphere_B)
y_ionosphere_BB <- ifelse(as.vector(y_ionosphere_BB) > 0.5, 1, 0)
y_ionosphere_BB
length(y_ionosphere_BB)
ionosphere_UC <- calculateUC(y_ionosphere_A, y_ionosphere_AA, y_ionosphere_B, y_ionosphere_BB)
ionosphere_UC
length(y_ionosphere_B)
length(y_ionosphere_true_B)
length(y_ionosphere_true)
y_aux <- y_ionosphere_true_B
y_ionosphere_true_B <- y_ionosphere_true
length(y_ionosphere_true_B)
length(y_ionosphere_true)
y_ionosphere_true_A <- y_aux
length(y_ionosphere_true_A)
remove(y_ionosphere_true)
remove(y_aux)
ionosphere_CEC <- calculateCEC(y_ionosphere_B, y_ionosphere_true_B)
ionosphere_CEC
dim(X_ionosphere)
dim(X_ionosphere_B)
length(d_ionosphere)
length(d_ionosphere_B)
model_ionosphere <- amnfis(X_ionosphere, d_ionosphere, 2)
source('~/amnfis/R/hello.R')
y_ionosphere_B <- transform_output(amnfis.simulate(model_ionosphere, X_ionosphere_B))
y_ionosphere_B
length(y_ionosphere_B)
length(y_ionosphere_true_B)
y_ionosphere_B[y_ionosphere_B == y_ionosphere_true_B]
length(y_ionosphere_B[y_ionosphere_B == y_ionosphere_true_B])
106/151
model_ionosphere_B <- amnfis(X_ionosphere_B, d_ionosphere_B, 2)
y_ionosphere_A <- amnfis.simulate(model_ionosphere_B, X_ionosphere)
y_ionosphere_A <- transform_output(y_ionosphere_A)
y_ionosphere_A
length(y_ionosphere_A)
length(y_ionosphere_true_A)
y_ionosphere_A[y_ionosphere_A == y_ionosphere_true_A]
length(y_ionosphere_A[y_ionosphere_A == y_ionosphere_true_A])
164/200
y_ionosphere_AA <- transform_output(amnfis.simulate(model_ionosphere, X_ionosphere))
y_ionosphere_AA
length(y_ionosphere_AA)
y_ionosphere_BB <- transform_output(amnfis.simulate(model_ionosphere_B, X_ionosphere_B))
ionosphere_CEC <- calculateCEC(y_ionosphere_B, d_ionosphere_B)
ionosphere_CEC
ionosphere_UC <- calculateUC(y_ionosphere_A, y_ionosphere_AA, y_ionosphere_B, y_ionosphere_BB)
ionosphere_UC
y_ionosphere_A[y_ionosphere_A == y_ionosphere_AA]
length(y_ionosphere_A[y_ionosphere_A == y_ionosphere_AA])
y_ionosphere_true_A[y_ionosphere_true_A == y_ionosphere_AA]
length(y_ionosphere_true_A[y_ionosphere_true_A == y_ionosphere_AA])
length(y_ionosphere_true_B[y_ionosphere_true_B == y_ionosphere_BB])
length(y_ionosphere_true_B)
length(y_ionosphere_BB)
length(y_ionosphere_true_A)
length(y_ionosphere_AA)
dim(X_ionosphere)
model_ionosphere <- amnfis(X_ionosphere, d_ionosphere, 15)
y_ionosphere_B <- transform_output(amnfis.simulate(model_ionosphere, X_ionosphere_B))
y_ionosphere_B
length(y_ionosphere_B)
ionosphere_CEC <- calculateCEC(y_ionosphere_B, y_ionosphere_true_B)
ionosphere_CEC
length(y_ionosphere_B[y_ionosphere_B == y_ionosphere_true_B])
124/151
model_ionosphere_B <- amnfis(X_ionosphere_B, d_ionosphere_B, 15)
y_ionosphere_A <- transform_output(amnfis.simulate(model_ionosphere_B, X_ionosphere))
y_ionosphere_A
y_ionosphere_A[y_ionosphere_A==y_ionosphere_true_A]
length(y_ionosphere_A[y_ionosphere_A==y_ionosphere_true_A])
length(y_ionosphere_A)
length(y_ionosphere_true_A)
139/200
y_ionosphere_AA <- transform_output(amnfis.simulate(model_ionosphere, X_ionosphere))
y_ionosphere_AA
length(y_ionosphere_AA[y_ionosphere_AA==y_ionosphere_true_A])
length(y_ionosphere_AA[y_ionosphere_AA==y_ionosphere_true_B])
y_ionosphere_BB <- transform_output(amnfis.simulate(model_ionosphere_B, X_ionosphere_B))
length(y_ionosphere_BB[y_ionosphere_BB==y_ionosphere_true_B])
ionosphere_UC <- calculateUC(y_ionosphere_A, y_ionosphere_AA, y_ionosphere_B, y_ionosphere_BB)
ionosphere_UC
append.Rda('X_ionosphere', 'X_ionosphere_B', 'd_ionosphere', 'd_ionosphere_B', 'y_ionosphere_A', 'y_ionosphere_AA', 'y_ionosphere_B', 'y_ionosphere_BB', 'y_ionosphere_true_A', 'y_ionosphere_true_B', 'model_ionosphere', 'model_ionosphere_B', 'ionosphere_part', file = 'environment_variables/env2.RData')
save(X_ionosphere, X_ionosphere_B, d_ionosphere, d_ionosphere_B, y_ionosphere_A, y_ionosphere_AA, y_ionosphere_B, y_ionosphere_BB, y_ionosphere_true_A, y_ionosphere_true_B, model_ionosphere, model_ionosphere_B, ionosphere_part, file = 'environment_variables/env2.RData')
source('~/amnfis/R/montecarlo.R')
source('~/amnfis/R/montecarlo.R')
xL <- c(0, 0)
xU <- c(10,10)
mcopt(f, xL, xU)
source('~/amnfis/R/montecarlo.R')
source('~/amnfis/R/montecarlo.R')
mcopt(f, xL, xU)
source('~/amnfis/R/montecarlo.R')
source('~/amnfis/R/montecarlo.R')
source('~/amnfis/R/montecarlo.R')
abs(c(-1,-2))
source('~/amnfis/R/montecarlo.R')
tresholdopt(f,c(1,5),1)
source('~/amnfis/R/montecarlo.R')
tresholdopt(f,c(-10,-10),R=5, K=3)
source('~/amnfis/R/montecarlo.R')
runif(5)
2*runif(5)
2*runif(5)-1
2*runif(3)-1
source('~/amnfis/R/montecarlo.R')
source('~/amnfis/R/montecarlo.R')
source('~/amnfis/R/montecarlo.R')
exaustiva()
source('~/amnfis/R/montecarlo.R')
exaustiva()
f2(c(2,-1))
source('~/amnfis/R/montecarlo.R')
source('~/amnfis/R/montecarlo.R')
mcopt(F, xL=c(-10,-10), xU = c(10, 10), M = 10000)
mcopt(F, xL=c(-10,-10), xU = c(10, 10), M = 10000)
optim(c(2,1), f2, method = 'BFGS')
optim(c(2,1), F, method = 'BFGS')
source('~/amnfis/R/montecarlo.R')
concrete <- read.csv('~/Documents/unal/aprendizaje de maquina/Concrete_Data.csv')
head(concrete)
str(concrete)
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
head(concrete_norm)
summary(concrete_norm$Concrete.compressive.strength.MPa..megapascals..)
source('~/amnfis/R/concrete_ann.R')
summary(concrete_norm$Concrete.compressive.strength.MPa..megapascals..)
head(concrete_norm)
summary(concrete_norm$Concrete.compressive.strength.MPa..megapascals..)
summary(concrete$Concrete.compressive.strength.MPa..megapascals..)
source('~/amnfis/R/concrete_ann.R')
install.packages("neuralnet")
head(concrete_train)
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
head(concrete_train)
source('~/amnfis/R/concrete_ann.R')
head(concrete_train)
source('~/amnfis/R/concrete_ann.R')
plot(concrete_model)
head(concrete_test)
source('~/amnfis/R/concrete_ann.R')
model_results
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
cor(predicted_strength, concrete_test$strength)
cor(predicted_strength, concrete_test$strength)
source('~/amnfis/R/concrete_ann.R')
cor(predicted_strength, concrete_test$strength)
source('~/amnfis/R/concrete_ann.R')
cor(predicted_strength, concrete_test$strength)
cor(predicted_strength, concrete_test$strength)
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
cor(predicted_strength2, concrete_test$strength)
source('~/amnfis/R/concrete_ann.R')
cor(predicted_strength2, concrete_test$strength)
source('~/amnfis/R/concrete_ann.R')
cor(predicted_strength2, concrete_test$strength)
cor(predicted_strength2, concrete_test$strength)
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
model_results2
length(model_results2$net.result)
concrete_test[1:8]
concrete_test[9]
length(concrete_test[9])
length(concrete_test[,9])
str(model_results2)
str(model_results2$net.result)
is.data.frame(model_results2$net.result)
is.vector(model_results2$net.result)
is.matrix(model_results2$net.result)
dim(concrete_test[,9])
concrete_test[,9]
concrete_test[,9]
concrete_test[1,9]
length(concrete_test)
length(concrete_test[,9])
sum((concrete_test[,9] - model_results2$net.result)^2)/length(concrete_test[,9])
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
head(concrete_norm)
head(concrete, n = 5)
head(concrete_norm, n = 5)
(540 - min(concrete$Cement..component.1..kg.in.a.m.3.mixture.))/(max(concrete$Cement..component.1..kg.in.a.m.3.mixture.)-min(concrete$Cement..component.1..kg.in.a.m.3.mixture.))
max(concrete$Cement..component.1..kg.in.a.m.3.mixture.)
min(concrete$Cement..component.1..kg.in.a.m.3.mixture.)
(540 - 102)/(540 - 102)
773*0.15
773-115
773+257
773-658
source('~/amnfis/R/concrete_ann.R')
model_results2$net.result
model_results2$neurons
source('~/amnfis/R/concrete_ann.R')
head(concrete_norm)
head(concrete)
source('~/amnfis/R/concrete_ann.R')
model_results2
source('~/amnfis/R/concrete_ann.R')
model_results2$net.result
concrete_test[773:775,9]
concrete_test[773:775,8]
concrete_test
concrete_test[774:775,8]
concrete_test[774:775]
concrete_test[774,]
concrete_test[1,]
concrete_test[1:3,9]
predicted_strength2[1:3]
source('~/amnfis/R/concrete_ann.R')
concrete_test[1:3,9]
predicted_strength2[1:3]
plot(arange(10))
library("neuralnet")
library("png")
install.packages("png")
img <- readPNG(system.file("img", "~/Desktop/error_ann_model_complexity.png", package="png"))
library("png")
img <- readPNG(system.file("img", "~/Desktop/error_ann_model_complexity.png", package="png"))
img <- readPNG(system.file("img", "~/Desktop/error_ann_model_complexity.png", package="png"))
system.file("img", "~/Desktop/error_ann_model_complexity.png")
readPNG("~/Desktop/error_ann_model_complexity.png")
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
head(model_results$net.result)
head(model_results2$net.result)
head(model_results3$net.result)
head(concrete_test[,9])
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/concrete_ann.R')
source('~/amnfis/R/hello.R')
head(concrete_norm)
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
source('~/amnfis/R/hello.R')
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
source('~/amnfis/R/hello.R')
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
source('~/amnfis/R/hello.R')
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
source('~/amnfis/R/hello.R')
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
source('~/amnfis/R/hello.R')
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
err <- glm(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
err
err$fitted.values
err$y
head(err$y)
head(concrete_norm[,ncol(concrete_norm)])
head(err$fitted.values)
length(err$fitted.values)
length(err$weights)
head(err$weights)
head(err$coefficients)
source('~/amnfis/R/hello.R')
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
err
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
source('~/amnfis/R/hello.R')
err <- fit_linear_classifier(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_norm)
err
source('~/amnfis/R/hello.R')
dim(concrete_norm)
concrete_norm1 <- concrete_norm[1:500,]
concrete_norm2 <- concrete_norm[501:1030,]
concrete_norm3 <- concrete_norm[1:700,]
concrete_norm4 <- concrete_norm[701:1030,]
binary_classification_error(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, first_partition = concrete_norm1, second_partition = concrete_norm2)
binary_classification_error(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, first_partition = concrete_norm3, second_partition = concrete_norm4)
mydata <- cbind(c(1.8,2.6,3.4,0.7,-0.2),c(4.2,3.4,5.3,-1,-2.8))
mydata
is.data.frame(mydata)
mydata <- as.data.frame(mydata)
is.data.frame(mydata)
mydata
repeat(mydata, each = 2)
repeat(mydata)
rep(mydata, each = 2)
matrix(rep(mydata, each = 2), ncol = 4, byrow = TRUE)
matrix(rep(as.matrix(mydata), each = 2), ncol = 4, byrow = TRUE)
matrix(rep(as.matrix(mydata), each = 2), nrow = 4)
matrix(rep(as.matrix(mydata), each = 2), ncol = 4, byrow = TRUE)
matrix(rep(as.matrix(mydata), each = 1), ncol = 4, byrow = TRUE)
rep(as.matrix(mydata), each = 1)
rep(as.matrix(mydata), each = 2)
rep(as.matrix(mydata), each = 5)
matrix(rep(as.matrix(mydata), each = 1), ncol = 4, byrow = TRUE)
matrix(rep(as.matrix(mydata), each = 5), ncol = 4, byrow = TRUE)
matrix(rep(as.matrix(mydata), each = 5), ncol = 5, byrow = TRUE)
mydata
mydata <- mydata$V1
mydata
matrix(rep(as.matrix(mydata), each = 5), ncol = 5, byrow = TRUE)
rep(1:4,2)
rep(1:4,2,2)
rep(1:4, each=2)
source('~/amnfis/R/hello.R')
mydata
mydata <- cbind(c(1.8,2.6,3.4,0.7,-0.2),c(4.2,3.4,5.3,-1,-2.8))
mydata
fn.splitdata(mydata)
source('~/amnfis/R/hello.R')
fn.splitdata(mydata)
source('~/amnfis/R/hello.R')
fn.splitdata(mydata)
source('~/amnfis/R/hello.R')
source('~/amnfis/R/hello.R')
fn.splitdata(mydata)
source('~/amnfis/R/hello.R')
fn.splitdata(mydata)
mydata
mydata[,1]
d1 <- fn.replicatedata(mydata[,1])
d1
v1 <- mydata[,1]
v1
ifelse(v1 >= d1, 1, 0)
ifelse(d1 >= v1, 1, 0)
ifelse(d1[d1 >= v1], 1, 0)
d1[d1 >= v1]
d1[ifelse(d1 >= v1, 1, 0)]
d1
v1
d1 >= v1
d1[ifelse(d1>0,1,3)]
d1
d1*2
c(1,2,3,4,5)*d1
d1
c1
v1
d1*c1
d1*v1
d1*t(v1)
t(d1)*v1
d1 <- t(d1)
ifelse(d1 >= v1,1,0)
t(ifelse(d1 >= v1,1,0))
source('~/amnfis/R/hello.R')
fn.getpartitions(v1)
d1
mat
mydata
fn.splitdata(mydata)
a <- c(1,1,1,0,0,1)
which(a==1, arr.ind = TRUE)
b <- which(a==1, arr.ind = TRUE)
a[b]
c <- which(a==0, arr.ind = TRUE)
c
a[c]
source('~/amnfis/R/hello.R')
